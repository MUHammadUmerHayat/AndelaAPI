"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngCookies","Mac","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("applicant-test"),ApplicationConfiguration.registerModule("applicant"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("instructors"),ApplicationConfiguration.registerModule("users"),angular.module("admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("signInUser",{url:"/admin",templateUrl:"modules/admin/views/admin.signin.view.html"}).state("createUser",{url:"/admin/create",templateUrl:"modules/admin/views/admin.create.users.html"}).state("createInst",{url:"/admin/createInst",templateUrl:"modules/admin/views/admin.create.inst.html"}).state("adminWelcome",{url:"/admin/welcome",templateUrl:"modules/admin/views/admin.welcome.html"}).state("listAppts",{url:"/admin/appts",templateUrl:"modules/admin/views/list.applicants.admin.html"}).state("listInstrs",{url:"/admin/instrs",templateUrl:"modules/admin/views/list.instructors.admin.html"}).state("viewcamp",{url:"/admin/camps/:campId",templateUrl:"modules/admin/views/view.bootcamp.admin.html"}).state("viewAppt",{url:"/admin/appt/:apptId",templateUrl:"modules/admin/views/view.applicant.admin.html"}).state("editApplicant",{url:"/admin/appt/:apptId",templateUrl:"modules/admin/views/edit.applicant.admin.html"}).state("listTrainees",{url:"/admin/trainees",templateUrl:"modules/admin/views/list.trainees.admin.html"}).state("listFellows",{url:"/admin/fellows",templateUrl:"modules/admin/views/list.fellows.admin.html"}).state("rateFellow",{url:"/fellows/:apptId/rate",templateUrl:"modules/admin/views/rate.fellows.admin.html"}).state("createTest",{url:"/admin/test/create",templateUrl:"modules/admin/views/admin.create.test.html"}).state("listcamps",{url:"/admin/camps",templateUrl:"modules/admin/views/list.bootcamps.admin.html"}).state("listadmins",{url:"/admins",templateUrl:"modules/admin/views/list.admins.admin.html"}).state("viewTest",{url:"/admin/test",templateUrl:"modules/admin/views/view.tests.admin.html"}).state("createCamp",{url:"/admin/create/camp",templateUrl:"modules/admin/views/admin.create.camp.html"}).state("editTest",{url:"/admin/test/:testId",templateUrl:"modules/admin/views/view.test.admin.html"}).state("addQueTest",{url:"/admin/test/add/:testId",templateUrl:"modules/admin/views/admin.add-question.test.html"}).state("listSkills",{url:"/admin/skills",templateUrl:"modules/admin/views/list.skills.admin.html"})}]),angular.module("admin").controller("BootcampsController",["$scope","$http","Authentication","$stateParams","$location","$modal","$log","Bootcamp",function($scope,$http,Authentication,$stateParams,$location,$modal,$log,Bootcamp){$scope.user=Authentication.user,$scope.createCamp=function(){var bootcamp=new Bootcamp($scope.credentials);bootcamp.$save(function(){$location.path("/admin/camps")},function(error){error&&($scope.error="Something went wrong. Please try again and check your input")})},$scope.viewcamp=function(){Bootcamp.get({campId:$stateParams.campId},function(response){$scope.camp=response,$scope.editorEnabled=!1},function(error){$scope.error=error.message})},$scope.listcamps=function(){Bootcamp.query(function(response){$scope.camps=response;for(var i=0;i<response.length;i++)$scope.camp_options.push(response[i].camp_name)},function(error){$scope.error=error.data.message,$location.path("/admin/welcome")})},$scope.deleteCamp=function(camp,index){$scope.camps.splice(index,1),camp.$remove(function(){},function(error){$scope.error=error.data.message})},$scope.enableApplicantEditor=function(index){$scope.editorEnabled=!0,$scope.formData.editableFirstName=$scope.camp.applicants[index].firstName,$scope.formData.editableLastName=$scope.camp.applicants[index].lastName,$scope.formData.editableEmail=$scope.camp.applicants[index].email},$scope.disableApplicantEditor=function(){$scope.editorEnabled=!1},$scope.saveApplicant=function(index){$scope.camp.applicants[index].firstName=$scope.formData.editableFirstName,$scope.camp.applicants[index].lastName=$scope.formData.editableLastName,$scope.camp.applicants[index].email=$scope.formData.editableEmail;var url="users/"+$scope.camp.applicants[index]._id,data={firstName:$scope.formData.editableFirstName,lastName:$scope.formData.editableLastName,email:$scope.formData.editableEmail};$http.put(url,data).success(function(){}).error(function(response){$scope.error=response.message}),$scope.disableApplicantEditor()},$scope.changeApplicantStatusInline=function(apptId,index){"fellow"===$scope.data.status.name?$http.put("/admin/applicant/"+apptId+"/role",{role:"fellow"}).success(function(){$scope.camp.applicants[index].status.name="Andela Fellow"}).error(function(response){$scope.error=response.message}):$http.put("/admin/applicant/"+apptId+"/status",$scope.data).success(function(){$scope.camp.applicants[index].status.name=$scope.data.status.name,$scope.camp.applicants[index].status.reason=$scope.data.status.reason,$scope.data.status.name=""}).error(function(response){$scope.error=response.message})}}]),angular.module("admin").controller("AdminController",["$scope","$http","Authentication","$stateParams","$location","$modal","$log",function($scope,$http,Authentication,$stateParams,$location,$modal,$log){$scope.user=Authentication.user,$scope.weeks=0,$scope.camp_options=[],$scope.formData={},$scope.data={},$scope.download=function(path){var fullPath="/admin/download?file="+path;window.open(fullPath,"_parent")},$scope.create=function(role){"admin"===role&&($scope.credentials.role="admin"),"inst"===role&&($scope.credentials.role="instructor"),$http.post("/admin/create",$scope.credentials).success(function(response){$scope.success=!0,$scope.passwordDetails=null,$location.path("instructor"===response.role?"/admin/instrs":"/admins")}).error(function(response){$scope.error=response.message})},$scope.viewTrainees=function(){$http.get("/admin/trainees").success(function(response){$scope.role=[],$scope.success=!0,$scope.trainees=response}).error(function(response){$scope.error=response.message})},$scope.listApplicants=function(){$http.get("/admin/applicants").success(function(response){$scope.success=!0,$scope.applicants=response}).error(function(response){$scope.error=response.message})},$scope.viewApplicant=function(){$http.get("/admin/applicant/"+$stateParams.apptId).success(function(response){$scope.data={},$scope.success=!0,$scope.appt=response,$scope.skillSet=response.skillSet,$scope.currPlacementEditorEnabled=!1,$scope.editableCurrCompany="",$scope.startDateEditorEnabled=!1,$scope.endDateEditorEnabled=!1,$scope.editableStartDate="",$scope.editableEndDate="",$scope.editableName="",$scope.email="",$scope.skillNameEditorEnabled=[],$scope.skillScoreEditorEnabled=[],$scope.editableSkillName=[],$scope.editableSkillScore=[],$scope.editableDetails=[];for(var i in $scope.appt.skillSet)$scope.skillNameEditorEnabled[i]=!1,$scope.skillScoreEditorEnabled[i]=!1,$scope.editableSkillName[i]="",$scope.editableSkillScore[i]=1;$scope.enableNameEditor=function(field){},$scope.enableCurrPlacementEditor=function(field){"company"===field&&($scope.currPlacementEditorEnabled=!0,$scope.editableCurrCompany=$scope.appt.currPlacement.status),"startDate"===field&&($scope.startDateEditorEnabled=!0,$scope.editableStartDate=""),"endDate"===field&&($scope.endDateEditorEnabled=!0,$scope.editableEndDate="")},$scope.enableskillEditor=function(field,index){"skillName"===field&&($scope.skillNameEditorEnabled[index]=!0,$scope.editableSkillName[index]=$scope.appt.skillSets[index].skill),"skillScore"===field&&($scope.skillScoreEditorEnabled[index]=!0,$scope.editableSkillScore[index]=$scope.appt.skillSets[index].rating)},$scope.disableskillEditor=function(field,index){"skillName"===field&&($scope.skillNameEditorEnabled[index]=!1),"skillScore"===field&&($scope.skillScoreEditorEnabled[index]=!1)},$scope.disableCurrPlacementEditor=function(field){"company"===field&&($scope.currPlacementEditorEnabled=!1),"startDate"===field&&($scope.startDateEditorEnabled=!1),"endDate"===field&&($scope.endDateEditorEnabled=!1)},$scope.saveskill=function(field,index){"skillName"===field&&($scope.appt.skillSets[index].skill=$scope.editableSkillName[index],$scope.updateSkill($scope.appt,index)),"skillScore"===field&&($scope.appt.skillSets[index].rating=$scope.editableSkillScore[index],$scope.updateSkill($scope.appt,index)),$scope.disableskillEditor(field,index)},$scope.saveCurrPlacement=function(field){"company"===field&&($scope.appt.currPlacement.status=$scope.editableCurrCompany,$scope.updatePlacement($scope.appt),$scope.disableCurrPlacementEditor("company")),"startDate"===field&&($scope.appt.currPlacement.startDate=$scope.editableStartDate,$scope.updatePlacement($scope.appt),$scope.disableCurrPlacementEditor("startDate")),"endDate"===field&&($scope.appt.currPlacement.endDate=$scope.editableEndDate,$scope.updatePlacement($scope.appt),$scope.disableCurrPlacementEditor("endDate"))}}).error(function(response){$scope.error=response.message})},$scope.updateSkill=function(appt,index){$http.put("/admin/trainee/"+appt._id+"/rate/"+appt.skillSets[index]._id,appt.skillSets[index]).success(function(){}).error(function(response){$scope.error=response.message})},$scope.updatePlacement=function(appt){$http.put("/admin/fellow/"+appt._id+"/placement",appt.currPlacement).success(function(){}).error(function(response){$scope.error=response.message})},$scope.deleteUser=function(userId,index){$scope.camp.applicants.splice(index,1),$http.put("/admin/camp/"+$scope.camp._id,$scope.camp).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message}),$http.delete("/admin/user/"+userId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.deleteAdmin=function(userId,index){$scope.admins.splice(index,1),$http.delete("/admin/user/"+userId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.deleteInstr=function(userId,index){$scope.instructors.splice(index,1),$http.delete("/admin/user/"+userId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.deleteFellow=function(userId,index){$scope.fellows.splice(index,1),$http.delete("/admin/user/"+userId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.getSkillLevel=function(val){return val=parseInt(val),2>=val?"beginner":4>=val?"junior":6>=val?"intermediate":8>=val?"senior":"expert"},$scope.listFellows=function(){$http.get("/admin/fellows").success(function(response){$scope.fellows=response}).error(function(response){$scope.error=response.message})},$scope.IsFellowUnavailable=function(fellow){var weeks=parseInt($scope.weeks),date=moment().add(weeks,"weeks");return fellow.placements?fellow.placements&&0===fellow.placements.length||0===weeks?!0:moment(fellow.placements[0].end_date)>date?!1:!0:!0},$scope.get_availability_date=function(fellow){return fellow.placements&&fellow.placements.length>0&&moment(fellow.placements[0].end_date)>moment()?moment(fellow.placements[0].end_date).format("LL"):"Now"},$scope.get_fellow_work_days=function(fellow){var oneday=864e5;if(fellow.placements&&fellow.placements.length>0){var curr_date=new Date,fellowavailabilityweeks=Math.ceil(new Date(fellow.placements[0].end_date).getTime()-curr_date.getTime())/(7*oneday);return 0>=fellowavailabilityweeks?0:Math.ceil(fellowavailabilityweeks)}return 0},$scope.check_placement=function(placement,index){$scope.get_fellow_work_days(placement)<=0?($scope.fellows[index].available="Needs Work",$scope.fellows[index].week=$scope.get_fellow_work_days(placement)):($scope.fellows[index].available="Currently Placed",$scope.fellows[index].week=$scope.get_fellow_work_days(placement))},$scope.listInstructors=function(){$http.get("/admin/instructors").success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.listAdmins=function(){$http.get("/admin/admins").success(function(response){$scope.admins=response,$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.listInstructors=function(){$http.get("/admin/instructors").success(function(response){$scope.instructors=response,$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.changeRoleToFellow=function(trainee_id,index){$scope.trainees.splice(index,1),$http.put("/admin/applicant/"+trainee_id+"/role",{role:$scope.role[index]}).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.viewInstructor=function(instrId){$http.get("/admin/applicant/"+instrId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.rateFellow=function(traineeId,skillId,newRating){var url="/admin/trainee/"+traineeId+"/skills/"+skillId;$http.put(url,{rating:newRating}).success(function(response){$scope.success=!0,$scope.appt=response}).error(function(response){$scope.error=response.message})},$scope.addPlacement=function(){$http.post("/admin/fellow/"+$stateParams.apptId+"/placements",$scope.data).success(function(response){$scope.data.company="",$scope.data.jobDescription="",$scope.data.start_date="",$scope.data.end_date="",$scope.appt=response}).error(function(response){$scope.error=response.message,"date"===$scope.error.type&&($scope.error="Please follow the date pattern specified M/D/YY e.g (use 2/5/2014 for 5th Feb 2014)")})},$scope.listSkills=function(){$http.get("/admin/skills").success(function(response){$scope.skills=response}).error(function(response){$scope.error=response.message,$location.path("/admin/welcome")})},$scope.openSkillModal=function(size){var modalInstance=$modal.open({templateUrl:"/modules/admin/views/admin.skills_modal.html",controller:"ModalInstanceCtrl",size:size,resolve:{categories:function(){return $scope.skillCategories}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.getSkillCategories=function(){$http.get("/admin/skillCategories").success(function(response){$scope.skillCategories=response}).error(function(response){$scope.error=response.message,$location.path("/admin/welcome")})},$scope.deleteSkillCategory=function(catId,index){$scope.skills.splice(index,1),$http.delete("/admin/skillCategories/"+catId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})}}]);var ModalInstanceCtrl=function($http,$scope,$route,$modalInstance,categories){$scope.categories=categories,$scope.data={},$scope.data.category=categories[0],$scope.createCategory=!1,$scope.ok=function(){$modalInstance.close("close")},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.createSkillCategory=function(){$http.post("/admin/skillCategories",$scope.data).success(function(response){$scope.categories.push(response),$scope.createCategory=!1,$scope.data.name=""}).error(function(response){$scope.error=response.message})},$scope.createSkill=function(){var url="/admin/skillCategories/"+$scope.data.category._id+"/skills";$http.post(url,$scope.data).success(function(){$route.reload()}).error(function(response){$scope.error=response.message})},$scope.showCreateCategory=function(){$scope.createCategory=!0}};angular.module("admin").controller("TestsController",["$scope","$http","Authentication","$stateParams","$location","$modal","$log","Tests",function($scope,$http,Authentication,$stateParams,$location,$modal,$log,Tests){$scope.choiceOne=[{id:"choice1"},{id:"choice2"}],$scope.choiceTwo=[{id:"choice1"},{id:"choice2"}],$scope.optionOne=[],$scope.optionTwo=[],$scope.questions=[],$scope.selected="",$scope.testName="",$scope.answered=!1,$scope.answeredTwo=!1,$scope.setShow=function(val){$scope.selected=val},$scope.isSelected=function(val){return val===$scope.selected},$scope.addNewChoice=function(num){var newItemNo;1===num?(newItemNo=$scope.choiceOne.length+1,$scope.choiceOne.push({id:"choice"+newItemNo})):(newItemNo=$scope.choiceTwo.length+1,$scope.choiceTwo.push({id:"choice"+newItemNo}))},$scope.deleteChoice=function(index,num){1===num?(parseInt($scope.test.answerOne,10)===$scope.choiceOne.length-1&&($scope.test.answerOne=$scope.test.answerOne-1),doDelete($scope.choiceOne,$scope.optionOne,index)):(parseInt($scope.test.answerTwo,10)===$scope.choiceTwo.length-1&&($scope.test.answerTwo=$scope.test.answerTwo-1),doDelete($scope.choiceTwo,$scope.optionTwo,index))};var doDelete=function(choiceArr,optionArr,index){choiceArr.splice(index,1),optionArr.splice(index,1);for(var i in choiceArr)choiceArr[i].id="choice"+i};$scope.showAddChoice=function(choice,num){return 1===num?choice.id===$scope.choiceOne[$scope.choiceOne.length-1].id:choice.id===$scope.choiceTwo[$scope.choiceTwo.length-1].id},$scope.changeAnsVal=function(index,num){1===num?$scope.answered=!0:$scope.answeredTwo=!0},$scope.createTest=function(){var test=new Tests({questions:$scope.questions,optionOne:$scope.optionOne,optionTwo:$scope.optionTwo,testName:$scope.testName,answerOne:$scope.test.answerOne,answerTwo:$scope.test.answerTwo});test.$save(function(){$location.path("/admin/test")},function(response){$scope.error=response.message})},$scope.createQuestion=function(){var test=new Tests({_id:$stateParams.testId,question:$scope.question,option:$scope.optionOne,answer:$scope.test.answerOne});test.$save(function(){$location.path("/admin/test")},function(err){$scope.error=err.message})},$scope.viewTests=function(){Tests.query(function(response){$scope.tests=response})},$scope.viewTest=function(){Tests.get({testId:$stateParams.testId},function(response){$scope.test=response,$scope.testNameEditorEnabled=!1,$scope.questionEditorEnabled=[],$scope.editableQuestion=[],$scope.optionEditorEnabled=[],$scope.editableOption=[],$scope.displayerrmsg=[];for(var i in $scope.test.questions){$scope.questionEditorEnabled[i]=!1,$scope.optionEditorEnabled[i]=[],$scope.editableOption[i]=[];for(var j in $scope.test.questions[i].questOptions)$scope.optionEditorEnabled[i][j]=!1,$scope.editableOption[i][j]={}}$scope.enableEditor=function(field,index,optionIndex){"testName"===field&&($scope.testNameEditorEnabled=!0,$scope.editabletestName=$scope.test.testName),"question"===field&&($scope.questionEditorEnabled[index]=!0,$scope.editableQuestion[index]=$scope.test.questions[index].question),"option"===field&&($scope.optionEditorEnabled[index][optionIndex]=!0,$scope.editableOption[index][optionIndex].option=$scope.test.questions[index].questOptions[optionIndex].option)},$scope.disableEditor=function(field,index,optionIndex){"testName"===field&&($scope.testNameEditorEnabled=!1),"question"===field&&($scope.questionEditorEnabled[index]=!1),"option"===field&&($scope.optionEditorEnabled[index][optionIndex]=!1)};var checkAllanswers=function(questOptions){var firstOption=questOptions[0].answer;for(var i in questOptions)if(firstOption!==questOptions[i].answer)return!1;return!0};$scope.save=function(field,index,optionIndex){if("testName"===field&&($scope.test.testName=$scope.editabletestName,$scope.changeTestName($scope.test)),"question"===field&&($scope.test.questions[index].question=$scope.editableQuestion[index],$scope.updateQuestion($scope.test,index)),"option"===field){if($scope.test.questions[index].questOptions[optionIndex].option=$scope.editableOption[index][optionIndex].option,(void 0===$scope.editableOption[index][optionIndex].answer||"undefined"===$scope.editableOption[index][optionIndex].answer)&&($scope.editableOption[index][optionIndex].answer=!1),$scope.editableOption[index][optionIndex].answer===!0)for(var i in $scope.test.questions[index].questOptions)i!==optionIndex&&($scope.test.questions[index].questOptions[i].answer=!1);$scope.test.questions[index].questOptions[optionIndex].answer=$scope.editableOption[index][optionIndex].answer,$scope.displayerrmsg[index]=checkAllanswers($scope.test.questions[index].questOptions)?!0:!1,$scope.updateQuestion($scope.test,index)}$scope.disableEditor(field,index,optionIndex)}})},$scope.changeTestName=function(test){test.$update({_id:test._id},function(){},function(errorResponse){$scope.error=errorResponse})},$scope.updateQuestion=function(test,quesIndex){var question=test.questions[quesIndex];$http.put("/admin/test/"+test._id+"/"+test.questions[quesIndex]._id,question).success(function(){}).error(function(response){$scope.error=response.message})},$scope.deleteTest=function(test,index){$scope.tests.splice(index,1),test.$remove({_id:test._id},function(){},function(response){$scope.error=response.message})},$scope.deleteQuestion=function(testId,questionId,index){$scope.test.questions.splice(index,1),$http.delete("/admin/test/"+testId+"/"+questionId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.deleteOption=function(testId,questionId,optionId,queIndex,index){$scope.test.questions[queIndex].questOptions.splice(index,1),$http.delete("/admin/test/"+testId+"/"+questionId+"/"+optionId).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})}}]),angular.module("admin").factory("Users",["$resource",function($resource){return $resource("admin",{},{update:{method:"PUT"}})}]).filter("range",function(){return function(input,total,start){total=parseInt(total);for(var i=start;total>i;i++)input.push(i);return input}}).factory("Tests",["$resource",function($resource){return $resource("admin/test/:testId",{testId:"@_id"},{update:{method:"PUT"}})}]).factory("Bootcamp",["$resource",function($resource){return $resource("admin/camp/:campId",{campId:"@_id"},{update:{method:"PUT"}})}]),angular.module("applicant-test").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTest",{url:"/test/:testId",templateUrl:"modules/applicant-test/views/test.client.view.html"})}]),angular.module("applicant-test").controller("ApplicantTestController",["$scope","$stateParams","$location","Authentication","Questions","$http",function($scope,$stateParams,$location,Authentication,Questions,$http){$scope.authentication=Authentication,$scope.find=function(){$http.get("/test/").success(function(response){$scope.questions=response})}}]),angular.module("applicant-test").factory("Questions",["$resource",function($resource){return $resource("/test/:testId",{testId:"@_id"},{updates:{method:"PUT"}})}]),angular.module("applicant").config(["$stateProvider",function($stateProvider){$stateProvider.state("applicantsprofile",{url:"/profile/applicant",templateUrl:"modules/applicant/views/applicantion.client.view.html"}).state("fellowsprofile",{url:"/profile/fellows",templateUrl:"modules/applicant/views/list.fellow.client.view.html"}).state("traineesprofile",{url:"/profile/trainee",templateUrl:"modules/applicant/views/trainee.client.view.html"}).state("fellow-profile",{url:"/profile/:applicantId",templateUrl:"modules/applicant/views/fellow.client.view.html"}).state("logged_in-profile",{url:"/logged_in_user/:logged_inId",templateUrl:"modules/applicant/views/logged_in.user.client.view.html"}).state("application",{url:"/signup",templateUrl:"modules/applicant/views/applicant.client.view.html"}).state("success",{url:"/successpage",templateUrl:"modules/applicant/views/success.client.view.html"}).state("error_page",{url:"/errorpage",templateUrl:"modules/applicant/views/error.client.view.html"})}]),angular.module("applicant").controller("ApplicantController",["$scope","$upload","$http","Authentication","$stateParams","$location","Applicants","Users","Bootcamps","Questions",function($scope,$upload,$http,Authentication,$stateParams,$location,Applicants,Users,Bootcamps,Questions){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.isClicked=!1,$scope.clicked=function(){$scope.isClicked=!0,$scope.showLoader=!0,$scope.signup()},$scope.findCamp=function(){$scope.result,Bootcamps.query().$promise.then(function(value){$scope.camp=value[0]._id},function(err){return err})},$scope.field=1,$scope.username="",$scope.password1="",$scope.cpassword1="",$scope.state=!1,$scope.show_next=function(value){4>value&&($scope.field++,$scope.result=[$scope.username,$scope.password1,$scope.cpassword1,$scope.gender],4===value&&math.ceil)},$scope.show_prev=function(value){value>1&&$scope.field--},$scope.findOneQuestion=function(){Questions.query().$promise.then(function(response){$scope.questions=response[0]},function(err){return err})},$scope.options=[],$scope.assess=function(test,option){if(0===$scope.options.length)$scope.options.push({question:test,answer:option});else for(var i=0;i<$scope.options.length;i++)test===$scope.options[i].question?$scope.options[i].answer=option:$scope.options.push({question:test,answer:option})},$scope.onFileSelect=function($files){$scope.files=$files,$scope.files&&($scope.correctFormat="application/pdf"===$scope.files[0].type||"application/msword"===$scope.files[0].type||"application/vnd.openxmlformats-officedocument.wordprocessingml.document"===$scope.files[0].type?!0:!1)},$scope.correctAnswers=0,$scope.signup=function(){new Users($scope.user);for(var i in $scope.questions.questions){var choices=$scope.questions.questions[i].questOptions;for(var j in choices)if(choices[j]._id===$scope.options[i].answer&&choices[j].answer===!0){$scope.correctAnswers+=1;break}}$scope.testScore=Math.round($scope.correctAnswers/$scope.questions.questions.length*100),$scope.user.type="applicant",$scope.user.testScore=$scope.testScore,$scope.upload=$upload.upload({url:"/auth/"+$scope.camp+"/signup",method:"Post",data:$scope.user,file:$scope.files[0]}).success(function(response){$scope.logId=response,$scope.authentication.user=response,$location.path("/successpage")}).error(function(){})},$scope.findOne=function(){Applicants.get({applicantId:$stateParams.applicantId}).$promise.then(function(response){$scope.applicant=response},function(err){$scope.error=err.message,$location.path("/")})},$scope.show_profile=function(){var url="/users/"+$stateParams.logged_inId;$http.get(url).success(function(response){$scope.user_profile=response}).error(function(response){$scope.error=response.message,$http.get("/auth/signout"),$location.path("/errorpage")})}}]),angular.module("applicant").directive("ngConfirmField",function(){return{require:"ngModel",scope:{confirmAgainst:"="},link:function(scope,iElement,iAttrs,ngModelCtrl){var updateValidity=function(){var viewValue=ngModelCtrl.$viewValue,isValid=isFieldValid();return ngModelCtrl.$viewValue&&ngModelCtrl.$setValidity("noMatch",isValid),isValid?viewValue:void 0},isFieldValid=function(){return ngModelCtrl.$viewValue===scope.confirmAgainst};ngModelCtrl.$parsers.push(updateValidity),scope.$watch("confirmAgainst",updateValidity)}}}),angular.module("applicant").directive("ensureUnique",["$http",function($http){return{require:"ngModel",link:function(scope,ele,attrs,c){attrs.$observe("ngModel",function(value){scope.$watch(value,function(newValue){$http({method:"POST",url:"/users/check/uniqueUsername",data:{username:newValue}}).success(function(data){data.length>0?c.$setValidity("unique",!1):c.$setValidity("unique",!0)}).error(function(){c.$setValidity("unique",!0)})})})}}}]),angular.module("applicant").factory("Applicants",["$resource",function($resource){return $resource("applicants/:applicantId",{applicantId:"@_id"},{update:{method:"PUT"}})}]),angular.module("applicant").factory("Users",["$resource",function($resource){return $resource("users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]),angular.module("applicant").factory("Bootcamps",["$resource",function($resource){return $resource("/camps",{},{update:{method:"PUT"}})}]),angular.module("applicant-test").factory("Questions",["$resource",function($resource){return $resource("/test/:testId",{testId:"@_id"},{updates:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("mission",{url:"/mission",templateUrl:"modules/core/views/mission.client.view.html"}).state("about",{url:"/meet_team",templateUrl:"modules/core/views/about.client.view.html"}).state("andela_network",{url:"/andela_network",templateUrl:"modules/core/views/andela.network.client.view.html"}).state("skill_focus",{url:"/skill_focus",templateUrl:"modules/core/views/skill_focus.client.view.html"}).state("timeline",{url:"/timeline",templateUrl:"modules/core/views/timeline.client.view.html"}).state("selection",{url:"/selection",templateUrl:"modules/core/views/selection.client.view.html"}).state("assessment",{url:"/assessment",templateUrl:"modules/core/views/take_assessment.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$location","Authentication","Menus","anchorSmoothScroll",function($scope,$location,Authentication,Menus,anchorSmoothScroll){$scope.authentication=Authentication,$scope.user=$scope.authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$("#nav li a").click(function(e){e.preventDefault();var $nav=($(this),$(this).parent());$nav.siblings("li").removeClass("active"),$nav.removeClass().addClass("active")});var scrollTimeout;$("a.scroll-top").click(function(){return $("html,body").animate({scrollTop:0},500),!1}),$(window).scroll(function(){clearTimeout(scrollTimeout),scrollTimeout=$(window).scrollTop()>400?setTimeout(function(){$("a.scroll-top:hidden").fadeIn()},100):setTimeout(function(){$("a.scroll-top:visible").fadeOut()},100)}),$scope.gotoElement=function(eID){anchorSmoothScroll.scrollTo(eID)}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]
},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").service("anchorSmoothScroll",function(){this.scrollTo=function(eID){function currentYPosition(){return self.pageYOffset?self.pageYOffset:document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop?document.body.scrollTop:0}function elmYPosition(eID){for(var elm=document.getElementById(eID),y=elm.offsetTop,node=elm;node.offsetParent&&node.offsetParent!=document.body;)node=node.offsetParent,y+=node.offsetTop;return y}var startY=currentYPosition(),stopY=elmYPosition(eID),distance=stopY>startY?stopY-startY:startY-stopY;if(100>distance)return void scrollTo(0,stopY);var speed=Math.round(distance/100);speed>=20&&(speed=20);var step=Math.round(distance/25),leapY=stopY>startY?startY+step:startY-step,timer=0;if(stopY>startY)for(var i=startY;stopY>i;i+=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY+=step,leapY>stopY&&(leapY=stopY),timer++;else for(var i=startY;i>stopY;i-=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY-=step,stopY>leapY&&(leapY=stopY),timer++}}),angular.module("instructors").config(["$stateProvider",function($stateProvider){$stateProvider.state("instructor_signin",{url:"/instructors",templateUrl:"modules/instructors/views/instructor_signin.client.view.html"}).state("instructorshome",{url:"/instructors/home",templateUrl:"modules/instructors/views/instructors_home.client.view.html"}).state("list_Trainees",{url:"/instructors/trainees",templateUrl:"modules/instructors/views/list-trainees.client.view.html"}).state("view_Trainee",{url:"/instructors/trainees/:applicantId",templateUrl:"modules/instructors/views/view-trainee.client.view.html"}).state("create_Assessment",{url:"/instructors/trainees/:applicantId/create_assessment",templateUrl:"modules/instructors/views/create-assessment.client.view.html"}).state("editAssessment",{url:"/instructors/trainees/:applicantId/:assessmentId/edit",templateUrl:"modules/instructors/views/edit-assessment.client.view.html"}).state("selected_fellow",{url:"/instructors/fellow_selected/:applicantId",templateUrl:"modules/instructors/views/selected-fellow.client.view.html"}).state("list_Fellows",{url:"/instructors/fellows",templateUrl:"modules/instructors/views/list-fellows.client.view.html"}).state("viewFellow",{url:"/instructors/fellows/:fellowId",templateUrl:"modules/instructors/views/view-fellow.client.view.html"}).state("ratefellow",{url:"/instructors/fellow/:fellowId/rate",templateUrl:"modules/instructors/views/rate.fellow.client.view.html"}).state("editRate",{url:"/instructors/fellow/:fellowId/:skillSetId/editRate",templateUrl:"modules/instructors/views/edit-rate.client.view.html"}).state("listBootcamps",{url:"/instructors/bootcamps",templateUrl:"modules/instructors/views/list-bootcamps.client.view.html"}).state("viewBootcamp",{url:"/instructors/bootcamps/:bootcampId",templateUrl:"modules/instructors/views/view-bootcamp.client.view.html"}).state("editProfile",{url:"/instructors/editProfile",templateUrl:"modules/instructors/views/edit-profile.client.view.html"}).state("change_Password",{url:"/change-password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("addSkills",{url:"/instructors/addSkill",templateUrl:"modules/instructors/views/skills.client.view.html"}).state("editSkills",{url:"/instructors/editSkills",templateUrl:"modules/instructors/views/edit-skill.client.view.html"})}]),angular.module("instructors").controller("AssessmentController",["$scope","$stateParams","$location","Authentication","Assessment","$http",function($scope,$stateParams,$location,Authentication,Assessment){$scope.editStates=[];var date=new Date,year=date.getFullYear(),month=date.getMonth(),day=date.getDate();month=("0"+(month+1)).slice(-2),year=year.toString().substr(2,2);var formattedDate=month+"/"+day+"/"+year;$scope.date=formattedDate,$scope.initEditStates=function(){for(var i in $scope.assessments)$scope.editStates[i]=!1},$scope.initEditStates(),$scope.models=[],$scope.createAssessment=function(){var assmntObject={traineeId:$stateParams.applicantId,assessment_name:$scope.assessment_name,assessment_date:$scope.date,score:$scope.score},assessment=new Assessment(assmntObject);assessment.$save(function(){$location.path("/instructors/trainees/"+$stateParams.applicantId)},function(error){$scope.error=error.data.message})},$scope.updateAssessment=function(index,assessment,model){var assessment=new Assessment(assessment);if(assessment.traineeId=assessment.applicantId,"undefined"!=typeof model.newScore&&0!==model.newScore.length&&(assessment.score=model.newScore),"undefined"!=typeof model.newName&&0!==model.newName.length&&(assessment.assessment_name=model.newName),"undefined"!=typeof model.newDate&&0!==model.newDate.length){var pattern=/^(0?[1-9]|1[012])\/(0?[1-9]|[12][0-9]|3[01])\/(199\d|[2-9]\d{3})$/;if(pattern.test(model.newDate)!==!0)return void alert("Date format should be MM/dd/yyyy");assessment.assessment_date=model.newDate}assessment.$update(function(response){$scope.editStates[index]=!1,$scope.assessments=response.assessments},function(error){$scope.error=error.message})},$scope.deleteAssessment=function(index,assessment){$scope.assessments.splice(index,1);var assessment=new Assessment(assessment);assessment.traineeId=assessment.applicantId,assessment.$remove(function(){$scope.success=!0},function(error){$scope.error=error.message})}}]),angular.module("instructors").controller("InstructorsController",["$scope","Assessment","Camp","$upload","$stateParams","$location","Authentication","$http",function($scope,Assessment,Camp,$upload,$stateParams,$location,Authentication,$http){$scope.user=Authentication.user,$scope.instructor_signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.user=response,$location.path("instructor"===$scope.user.role?"/instructors/home":"/")}).error(function(response){$scope.error=response.message,$location.path("/")})},$scope.instructorHome=function(){$scope.user||$location.path("/")},$scope.listBootcamps=function(){Camp.query(function(response){$scope.success=!0,$scope.bootcamps=response,$scope.traineeCountArr=[];for(var i in $scope.bootcamps){var traineeCount=0;for(var j in $scope.bootcamps[i].applicants)"trainee"===$scope.bootcamps[i].applicants[j].role&&(traineeCount+=1);$scope.traineeCountArr.push(traineeCount)}},function(error){$scope.error=error.message})},$scope.viewBootcamp=function(){$scope.error=!1,0===$stateParams.bootcampId.length?$scope.error=!0:Camp.get({campId:$stateParams.bootcampId},function(response){$scope.bootcamp=response,$scope.applicants=$scope.bootcamp.applicants},function(){$scope.error=!0})},$scope.onlyTrainees=function(applicant){return"trainee"===applicant.role},$scope.listTrainees=function(){$http.get("/instructor/trainees").success(function(response){$scope.success=!0,$scope.trainees=response}).error(function(response){$scope.error=response.message})},$scope.viewTrainee=function(){""===$stateParams.applicantId?$scope.error=!0:Assessment.get({traineeId:$stateParams.applicantId},function(response){$scope.success=!0,$scope.error=!1,$scope.trainee=response,$scope.assessments=$scope.trainee.assessments},function(){$scope.error=!0})},$scope.listFellows=function(){$http.get("/instructor/fellows").success(function(response){$scope.success=!0,$scope.fellows=response}).error(function(response){$scope.error=response.message})},$scope.viewFellow=function(){$stateParams.fellowId.length<20?$location.path("/"):$http.get("/instructor/trainee/"+$stateParams.fellowId).success(function(response){$scope.success=!0,$scope.fellow=response}).error(function(response){$scope.error=response.message})},$scope.showImage=function(img){return img?img=img.substring(6):"http://www.localcrimenews.com/wp-content/uploads/2013/07/default-user-icon-profile.png"},$scope.getAssessment=function(){$scope.error=!1,Assessment.get({traineeId:$stateParams.applicantId,assmtId:$stateParams.assessmentId},function(response){if(response._id){$scope.assessment=response;var date=new Date($scope.assessment.assessment_date),year=date.getFullYear(),month=date.getMonth(),day=date.getDate();month=("0"+(month+1)).slice(-2),year=year.toString().substr(2,2),$scope.assessment.assessment_date=month+"/"+day+"/"+year}else $scope.error=!0},function(){$scope.error=!0})}}]),angular.module("instructors").controller("RateController",["$scope","$stateParams","$location","$http",function($scope,$stateParams,$location,$http){$scope.ratefellow=function(){$http.post("/instructor/trainee/"+$stateParams.fellowId+"/rate",$scope.data).success(function(){$scope.success=!0,$location.path("/instructors/fellows/"+$stateParams.fellowId)}).error(function(response){$scope.error=response.message})},$scope.deleteRate=function(index,skillSet){$scope.skillSets=$scope.fellow.skillSets,$scope.skillSets.splice(index,1),$http.delete("/instructor/trainee/"+$scope.fellow._id+"/rate/"+skillSet._id).success(function(){$scope.success=!0}).error(function(response){$scope.error=response.message})},$scope.editFellowRate=function(){$http.put("/instructor/trainee/"+$stateParams.fellowId+"/rate/"+$stateParams.skillSetId,$scope.skillSetsNow).success(function(){$scope.success=!0,$location.path("/instructors/fellows/"+$stateParams.fellowId)}).error(function(response){$scope.error=response.message})}}]);var ProfileController=function($scope,$http,$upload,$stateParams,$location,Authentication){$scope.user=Authentication.user,$scope.onFileSelect=function($file){$scope.file=$file,$scope.file&&($scope.correctFormat="image/jpeg"===$scope.file[0].type||"image/png"===$scope.file[0].type?!0:!1)},$scope.removeAlert=function(message){"error"===message?$scope.error=null:$scope.success=null},$scope.create=function(){$scope.success=null,$scope.error=null,$scope.upload=$upload.upload({url:"/instructor/updateInfo",method:"POST",data:$scope.user,file:$scope.file}).success(function(response){$scope.user=Authentication.user=response,$scope.success="Your details have been updated successfully"}).error(function(err){$scope.error=err.message})},$scope.deletePhoto=function(){$http.delete("/instructor/"+$scope.user._id+"/deletePhoto").success(function(response){$scope.user.photo=response.photo}).error(function(response){$scope.error=response.message})},$scope.showImage=function(img){return img?img=img.substring(6):"http://www.localcrimenews.com/wp-content/uploads/2013/07/default-user-icon-profile.png"}};angular.module("instructors").factory("Assessment",["$resource",function($resource){return $resource("instructor/trainee/:traineeId/:assmtId",{traineeId:"@traineeId",assmtId:"@_id"},{update:{method:"PUT"}})}]).factory("Camp",["$resource",function($resource){return $resource("instructor/camp/:campId",{campId:"@_id"},{update:{method:"PUT"}})}]).factory("Tests",["$resource",function($resource){return $resource("instructor",{},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("admin"===$scope.authentication.user.role?"/admin/welcome":"instructor"===$scope.authentication.user.role?"/instructors/home":"/logged_in_user/"+$scope.authentication.user._id)}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$timeout","$http","$location","Users","Authentication",function($scope,$timeout,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){var user=new Users($scope.user);user.$update(function(response){$scope.successOne=!0,$scope.user=Authentication.user=response,$timeout(function(){$scope.successOne=null},5e3)},function(response){$scope.errorOne=response.data.message,$timeout(function(){$scope.errorOne=null},5e3)})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/"+$scope.user._id+"/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);